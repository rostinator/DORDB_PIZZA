-- Triviální IO

-- Telefonní číslo zákazníka se musí skládat pouze z číselných znaků
ALTER TABLE customer ADD CONSTRAINT customer_phone_ck CHECK(REGEXP_LIKE(PHONE, '^[[:digit:]]+$'));

-- Cena objednávek a jednotlivých pizz je kladné reálné číslo
ALTER TABLE orders ADD CONSTRAINT orders_price_ck CHECK ( PRICE > 0 );
ALTER TABLE pizza ADD CONSTRAINT pizza_price_ck CHECK ( PRICE > 0 );

-- PSČ se skladá pouze z číselných znaků
ALTER TABLE address ADD CONSTRAINT address_postal_code_ck CHECK (REGEXP_LIKE(POSTAL_CODE, '^[[:digit:]]+$'));

-- Datum vytvoření objednávky je dřívější než datum aktualizace a předpokádaného doručení
ALTER TABLE orders ADD CONSTRAINT orders_date_ck CHECK ( (CREATED < UPDATED AND CREATED < ESTIMATED_DELIVERY) );

-- Datum vytvoření pizzy je dřívější než datum aktualizace
ALTER TABLE pizza ADD CONSTRAINT pizza_date_ck CHECK ( CREATED < UPDATED );

-- Množství jednotlivých položek objednávky je kladné číslo
ALTER TABLE pizza_order ADD CONSTRAINT pizza_order_amount_ck CHECK ( AMOUNT > 0 );

-- Uživatel s rolí CUSTOMER musí mít přiřazeného zákazníka
ALTER TABLE userz ADD CONSTRAINT user_role_ck CHECK ( (ROLE = 'CUSTOMER' and CUSTOMER_ID IS NOT NULL) OR (ROLE <> 'CUSTOMER'));


-- Netriviální IO

-- Nelze do pizzy pridat neaktivní ingredienci
CREATE OR REPLACE PROCEDURE pizza_ingredient_active_ck (
    p_ingredient_id IN INTEGER
) AS
    is_active ingredient.active%TYPE;
BEGIN
    SELECT i.active
    INTO is_active
    FROM ingredient i
    WHERE i.id = p_ingredient_id;

    IF is_active = '0' THEN
        raise_application_error(-20001, 'Nelze pridat na pizzu neaktivni ingredienci.');
    END IF;
END;
/
-- Nelze vytvořit položku objednávky pokud je pizza neaktivní
CREATE OR REPLACE TRIGGER pizza_ingredient_active_tr BEFORE
    INSERT OR UPDATE ON pizza_ingredient
    FOR EACH ROW
BEGIN
    pizza_ingredient_active_ck(:new.ingredient_id);
END;
/
CREATE OR REPLACE PROCEDURE create_order_item_ck (
    p_pizza_id IN INTEGER
) AS
    is_active pizza.active%TYPE;
BEGIN
    SELECT p.active
    INTO is_active
    FROM pizza p
    WHERE p.id = p_pizza_id;

    IF is_active = '0' THEN
        raise_application_error(-20001, 'Nelze pridat do objednavky neaktivni polozku.');
    END IF;
END;
/
CREATE OR REPLACE TRIGGER create_order_item_tr BEFORE
    INSERT OR UPDATE ON pizza_order
    FOR EACH ROW
BEGIN
    create_order_item_ck(:new.pizza_id);
END;